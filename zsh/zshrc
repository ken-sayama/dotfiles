export ZPLUG_HOME=/usr/local/opt/zplug
source $ZPLUG_HOME/init.zsh
export LANG=ja_JP.UTF-8


autoload -U promptinit; promptinit
# プロンプトを変更
prompt pure

setopt auto_cd
setopt auto_list
setopt auto_menu

zplug 'zsh-users/zsh-autosuggestions'
zplug 'zsh-users/zsh-completions'
zplug 'zsh-users/zsh-syntax-highlighting'
zplug "mollifier/anyframe"
zplug "mollifier/cd-gitroot"
# zplug "b4b4r07/enhancd", use:enhancd.sh
zplug "zsh-users/zsh-history-substring-search", hook-build:"__zsh_version 4.3"
zplug "junegunn/fzf-bin", as:command, from:gh-r, rename-to:fzf
zplug "junegunn/fzf", as:command, use:bin/fzf-tmux
zplug "supercrabtree/k"
zplug "junegunn/fzf", use:shell/key-bindings.zsh
zplug "junegunn/fzf", use:shell/completion.zsh
zplug "b4b4r07/enhancd", use:init.sh
zplug "paulirish/git-open", as:plugin
zplug "tysonwolker/iterm-tab-colors"

# : "cd先のディレクトリのファイル一覧を表示する" && {
#   [ -z "$ENHANCD_ROOT" ] && function chpwd { tree -L 1 } # enhancdがない場合
#   [ -z "$ENHANCD_ROOT" ] || export ENHANCD_HOOK_AFTER_CD="tree -L 1" # enhancdがあるときはそのHook機構を使う
# }

: "sshコマンド補完を~/.ssh/configから行う" && {
  function _ssh { compadd $(fgrep 'Host ' ~/.ssh/*/config | grep -v '*' |  awk '{print $2}' | sort) }
}

# compinit 以降に読み込むようにロードの優先度を変更する
zplug "zsh-users/zsh-syntax-highlighting", defer:2

# Theme

#zplug "b-ryan/powerline-shell"

#function powerline_precmd() {
#    PS1="$(powerline-shell --shell zsh $?)"
#}
#
#function install_powerline_precmd() {
#  for s in ${precmd_functions[@]}; do
#    if [ "$s" = "powerline_precmd" ]; then
#      return
#    fi
#  done
#  precmd_functions+=(powerline_precmd)
#}

#if [ "$TERM" != "linux" ]; then
#  install_powerline_precmd
#fi

# 未インストール項目をインストールする
if ! zplug check --verbose; then
    printf "Install? [y/N]: "
    if read -q; then
        echo; zplug install
    fi
fi

# コマンドをリンクして、PATH に追加し、プラグインは読み込む
zplug load --verbose

# Railsの環境変数を切り替える関数
function use_local(){
    export BUNDLE_GEMFILE="Gemfile.local"
}

function unuse_local(){
    unset BUNDLE_GEMFILE
}

# export関連は以下に
export XDG_CONFIG_HOME="$HOME/.config"
export TERM=xterm-256color
export PATH="/usr/local/bin:$PATH"
export PATH="/usr/local/share/npm/bin:$PATH"

export PATH="$HOME/.rbenv/bin:$PATH"
if which rbenv > /dev/null; then eval "$(rbenv init -)"; fi

export PATH=/Applications/MAMP/bin/php/php7.1.8/bin:$PATH
export PATH=$HOME/.nodebrew/current/bin:$PATH
export PATH="$PATH:/Users/kensayama/.config/composer/vendor/bin"

export PATH="/usr/local/opt/mysql@5.7/bin:$PATH"

# tabtab source for serverless package
# uninstall by removing these lines or running `tabtab uninstall serverless`
[[ -f /Users/kensayama/Repository/shopify-webhook-lambda/node_modules/tabtab/.completions/serverless.zsh ]] && . /Users/kensayama/Repository/shopify-webhook-lambda/node_modules/tabtab/.completions/serverless.zsh
# tabtab source for sls package
# uninstall by removing these lines or running `tabtab uninstall sls`
[[ -f /Users/kensayama/Repository/shopify-webhook-lambda/node_modules/tabtab/.completions/sls.zsh ]] && . /Users/kensayama/Repository/shopify-webhook-lambda/node_modules/tabtab/.completions/sls.zsh

alias ctags="`brew --prefix`/bin/ctags"
export PATH="$HOME/sls/node_modules/.bin/:$PATH"
export PATH="/usr/local/opt/mysql@5.7/bin:$PATH"

# tabtab source for slss package
# uninstall by removing these lines or running `tabtab uninstall slss`
[[ -f /Users/kensayama/AWS/Lambda/layers/node_modules/tabtab/.completions/slss.zsh ]] && . /Users/kensayama/AWS/Lambda/layers/node_modules/tabtab/.completions/slss.zsh

alias bdash="sftp -P 10222 -i ~/.ssh/id_rsa_francfranc bals-ec03_ftp_bdash@52.68.144.64"

export FZF_DEFAULT_OPTS='--height 40% --reverse --border'
